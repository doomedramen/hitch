version: 2
project_name: hitch
release:
  github:
    owner: DoomedRamen
    name: hitch
  prerelease: auto
  name_template: Hitch {{.Version}}
  header: |
    ## Hitch {{.Version}}

    Install or upgrade:
    ```bash
    # Homebrew (macOS/Linux)
    brew tap DoomedRamen/hitch
    brew install hitch
    # or
    brew upgrade hitch

    # curl (macOS/Linux)
    curl -fsSL https://raw.githubusercontent.com/DoomedRamen/hitch/main/install.sh | bash

    # Go
    go install github.com/DoomedRamen/hitch/cmd/hitch@{{.Version}}
    ```
  footer: |
    **Full Changelog**: https://github.com/DoomedRamen/hitch/compare/{{.PreviousTag}}...{{.Tag}}
builds:
  - id: hitch
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - darwin_amd64_v1
      - darwin_arm64_v8.0
      - linux_amd64_v1
      - linux_arm64_v8.0
      - windows_amd64_v1
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./cmd/hitch
    binary: hitch
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w
      - -X github.com/DoomedRamen/hitch/internal/version.Version={{.Version}}
      - -X github.com/DoomedRamen/hitch/internal/version.Commit={{.Commit}}
      - -X github.com/DoomedRamen/hitch/internal/version.Date={{.Date}}
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    builds_info:
      mode: 493
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    formats:
      - tar.gz
    format_overrides:
      - goos: windows
        formats:
          - zip
        format: zip
    files:
      - src: LICENSE
      - src: README.md
      - src: COMMANDS.md
    format: tar.gz
snapshot:
  name_template: '{{ incpatch .Version }}-next'
  version_template: '{{ incpatch .Version }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
docker_digest:
  name_template: digests.txt
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - typo
  sort: asc
  use: github
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
  groups:
    - title: Features
      regexp: ^.*?feat(\([[:word:]]+\))??!?:.+$
    - title: Bug Fixes
      regexp: ^.*?fix(\([[:word:]]+\))??!?:.+$
      order: 1
    - title: Others
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go mod download
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
    expected_status_codes:
      - 200
      - 201
      - 202
      - 204
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
brews:
  - name: hitch
    repository:
      owner: DoomedRamen
      name: hitch
      branch: homebrew
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Brew formula update for {{ .ProjectName }} version {{ .Tag }}
    directory: Formula
    install: |
      bin.install "hitch"

      # Install shell completions (if we add them later)
      # bash_completion.install "completions/hitch.bash" => "hitch"
      # zsh_completion.install "completions/_hitch" => "_hitch"
      # fish_completion.install "completions/hitch.fish"
    test: |
      system "#{bin}/hitch", "--version"
    description: Git workflow manager for multi-environment development teams
    homepage: https://github.com/DoomedRamen/hitch
    license: MIT
    goarm: "6"
    goamd64: v1
